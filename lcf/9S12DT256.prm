/*
** ###################################################################
**     THIS BEAN MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : _9s12b.PRM
**     Project   : _9s12b
**     Processor : MC9S12DT256BCPV
**     Compiler  : CodeWarrior HC12 C Compiler
**     Date/Time : 3/9/2009, 11:56 AM
**     Abstract  :
**        This file is used by the linker. It describes files to be linked,
**        memory ranges, stack size, etc. For detailed description of the PRM file
**        see CodeWarrior documentation. This file is generated by default.
**        You can switch off generation by setting the property
**        "Generate PRM file = no" on the "Build options" tab in CPU bean and then modify
**        this file if needed.
**
**     (c) Copyright UNIS, spol. s r.o. 1997-2002
**     UNIS, spol. s r.o.
**     Jundrovska 33
**     624 00 Brno
**     Czech Republic
**     http      : www.processorexpert.com
**     mail      : info@processorexpert.com
** ###################################################################
*/

NAMES

END

SEGMENTS  /* Here all RAM/ROM areas of the device are listed. Used in PLACEMENT below. */
      RAM           = READ_WRITE    0x1000 TO   0x3FFF;
      ROM_4000      = READ_ONLY     0x4000 TO   0x7FFF;  // 3e
      ROM_C000      = READ_ONLY     0xC000 TO   0xFEFF;  // 3f
      PAGE_30       = READ_ONLY   0x308000 TO 0x30BFFF;
      PAGE_31       = READ_ONLY   0x318000 TO 0x31BFFF;
      PAGE_32       = READ_ONLY   0x328000 TO 0x32BFFF;
      PAGE_33       = READ_ONLY   0x338000 TO 0x33BFFF;
      PAGE_34       = READ_ONLY   0x348000 TO 0x34BFFF;
      PAGE_35       = READ_ONLY   0x358000 TO 0x35BFFF;
      PAGE_36       = READ_ONLY   0x368000 TO 0x36BFFF;
      PAGE_37       = READ_ONLY   0x378000 TO 0x37BFFF;
      PAGE_38       = READ_ONLY   0x388000 TO 0x38BFFF;  // HELP
      PAGE_39       = READ_ONLY   0x398000 TO 0x39BFFF;
      PAGE_3A       = READ_ONLY   0x3A8000 TO 0x3ABFFF;
      PAGE_3B       = READ_ONLY   0x3B8000 TO 0x3BBFFF;
      PAGE_3C       = READ_ONLY   0x3C8000 TO 0x3CBFFF;  // BASIC STORE, in flash block 0
      PAGE_3D       = READ_ONLY   0x3D8000 TO 0x3DBFFF;
END

PLACEMENT /* here all predefined and user segments are placed into the SEGMENTS defined above. */
      _PRESTART,              /* Used in HIWARE format: jump to _Startup at the code start */
      STARTUP,                /* startup data structures */
      ROM_VAR,                /* constant variables */
      STRINGS,                /* string literals */
      NON_BANKED,             /* runtime routines which must not be banked */
      COPY              INTO  ROM_4000;

      DEFAULT_ROM       INTO  PAGE_30, PAGE_31, PAGE_32, PAGE_33, PAGE_34, PAGE_35, PAGE_36, PAGE_37; 
                              
      HELP_CODE, HELP_STRING INTO PAGE_38;

      DEFAULT_RAM             /* all variables, the default RAM location */
                        INTO  RAM;
END

//INIT _EntryPoint                       /* The entry point of the application. This function is generated into the CPU module. */

STACKSIZE 0x0800                       /* Size of the system stack. Value can be changed on the "Build options" tab */
