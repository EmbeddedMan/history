typedef unsigned char uint8;
typedef unsigned short int uint16;
typedef unsigned long int uint32;
typedef signed char int8;
typedef signed short int int16;
typedef signed long int int32;
typedef volatile uint8 vuint8;
typedef volatile uint16 vuint16;
typedef volatile uint32 vuint32;
#pragma define_section system ".system" far_absolute RW
extern __declspec(system) uint8 __IPSBAR[];
extern __declspec(system) uint8 __RAMBAR[];
extern __declspec(system) uint8 __RAMBAR_SIZE[];
extern __declspec(system) uint8 __FLASHBAR[];
extern __declspec(system) uint8 __FLASHBAR_SIZE[];
#define IPSBAR_ADDRESS  (uint32)__IPSBAR
#define RAMBAR_ADDRESS  (uint32)__RAMBAR
#define RAMBAR_SIZE  (uint32)__RAMBAR_SIZE
#define FLASHBAR_ADDRESS  (uint32)__FLASHBAR
#define FLASHBAR_SIZE  (uint32)__FLASHBAR_SIZE
#if MCF52221
#define MCF_ADC_ADLST1 (*(vuint16*)(&__IPSBAR[0x190006]))
#define MCF_ADC_ADLST2 (*(vuint16*)(&__IPSBAR[0x190008]))
#define MCF_ADC_ADRSLT(x) (*(vuint16*)(&__IPSBAR[0x190012 + ((x)*0x2)]))
#define MCF_ADC_ADSDIS (*(vuint16*)(&__IPSBAR[0x19000A]))
#define MCF_ADC_ADSTAT (*(vuint16*)(&__IPSBAR[0x19000C]))
#define MCF_ADC_CTRL1 (*(vuint16*)(&__IPSBAR[0x190000]))
#define MCF_ADC_CTRL1_SMODE(x) (((x)&0x7)<<0)
#define MCF_ADC_CTRL1_START0 (0x2000)
#define MCF_ADC_CTRL2 (*(vuint16*)(&__IPSBAR[0x190002]))
#define MCF_ADC_POWER (*(vuint16*)(&__IPSBAR[0x190052]))
#define MCF_ADC_POWER_PUDELAY(x) (((x)&0x3F)<<0x4)
#define MCF_CFM_CFMCLKD (*(vuint8 *)(&__IPSBAR[0x1D0002]))
#define MCF_CFM_CFMCLKD_DIV(x) (((x)&0x3F)<<0)
#define MCF_CFM_CFMCLKD_DIVLD (0x80)
#define MCF_CFM_CFMCLKD_PRDIV8 (0x40)
#define MCF_CFM_CFMCMD (*(vuint8 *)(&__IPSBAR[0x1D0024]))
#define MCF_CFM_CFMCMD_PAGE_ERASE (0x40)
#define MCF_CFM_CFMCMD_WORD_PROGRAM (0x20)
#define MCF_CFM_CFMDACC (*(vuint32*)(&__IPSBAR[0x1D0018]))
#define MCF_CFM_CFMMCR (*(vuint16*)(&__IPSBAR[0x1D0000]))
#define MCF_CFM_CFMPROT (*(vuint32*)(&__IPSBAR[0x1D0010]))
#define MCF_CFM_CFMSACC (*(vuint32*)(&__IPSBAR[0x1D0014]))
#define MCF_CFM_CFMSEC_SECSTAT (0x40000000)
#define MCF_CFM_CFMUSTAT (*(vuint8 *)(&__IPSBAR[0x1D0020]))
#define MCF_CFM_CFMUSTAT_ACCERR (0x10)
#define MCF_CFM_CFMUSTAT_CBEIF (0x80)
#define MCF_CFM_CFMUSTAT_CCIF (0x40)
#define MCF_CFM_CFMUSTAT_PVIOL (0x20)
#define MCF_CLOCK_CCHR (*(vuint8 *)(&__IPSBAR[0x120008]))
#define MCF_CLOCK_RTCDR (*(vuint32*)(&__IPSBAR[0x12000C]))
#define MCF_CLOCK_SYNCR (*(vuint16*)(&__IPSBAR[0x120000]))
#define MCF_CLOCK_SYNCR_CLKSRC (0x4)
#define MCF_CLOCK_SYNCR_DISCLK (0x40)
#define MCF_CLOCK_SYNCR_MFD(x) (((x)&0x7)<<0xC)
#define MCF_CLOCK_SYNCR_PLLEN (0x1)
#define MCF_CLOCK_SYNCR_PLLMODE (0x2)
#define MCF_CLOCK_SYNSR (*(vuint8 *)(&__IPSBAR[0x120002]))
#define MCF_CLOCK_SYNSR_LOCK (0x8)
#define MCF_CLOCK_SYNSR_OCOSC (0x40)
#define MCF_EPORT_EPFR (*(vuint8 *)(&__IPSBAR[0x130006]))
#define MCF_EPORT_EPIER (*(vuint8 *)(&__IPSBAR[0x130003]))
#define MCF_EPORT_EPIER_EPIE1 (0x2)
#define MCF_EPORT_EPPAR (*(vuint16*)(&__IPSBAR[0x130000]))
#define MCF_EPORT_EPPAR_EPPA1_FALLING (0x8)
#define MCF_EPORT_EPPAR_EPPA1_LEVEL (0)
#define MCF_EPORT_EPPDR (*(vuint8 *)(&__IPSBAR[0x130005]))
#define MCF_EPORT_EPPDR_EPPD1 (0x2)
#define MCF_GPIO_CLRAS (*(vuint8 *)(&__IPSBAR[0x100053]))
#define MCF_GPIO_CLRNQ (*(vuint8 *)(&__IPSBAR[0x100050]))
#define MCF_GPIO_CLRTC (*(vuint8 *)(&__IPSBAR[0x100057]))
#define MCF_GPIO_CLRUA (*(vuint8 *)(&__IPSBAR[0x100059]))
#define MCF_GPIO_DDRAN (*(vuint8 *)(&__IPSBAR[0x100022]))
#define MCF_GPIO_DDRAS (*(vuint8 *)(&__IPSBAR[0x100023]))
#define MCF_GPIO_DDRNQ (*(vuint8 *)(&__IPSBAR[0x100020]))
#define MCF_GPIO_DDRQS (*(vuint8 *)(&__IPSBAR[0x100024]))
#define MCF_GPIO_DDRTA (*(vuint8 *)(&__IPSBAR[0x100026]))
#define MCF_GPIO_DDRTC (*(vuint8 *)(&__IPSBAR[0x100027]))
#define MCF_GPIO_DDRUA (*(vuint8 *)(&__IPSBAR[0x100029]))
#define MCF_GPIO_DDRUB (*(vuint8 *)(&__IPSBAR[0x10002A]))
#define MCF_GPIO_DDRUC (*(vuint8 *)(&__IPSBAR[0x10002B]))
#define MCF_GPIO_PANPAR (*(vuint8 *)(&__IPSBAR[0x10006A]))
#define MCF_GPIO_PASPAR (*(vuint8 *)(&__IPSBAR[0x10006B]))
#define MCF_GPIO_PDDPAR (*(vuint8 *)(&__IPSBAR[0x100074]))
#define MCF_GPIO_PNQPAR (*(vuint16*)(&__IPSBAR[0x100068]))
#define MCF_GPIO_PORTAN (*(vuint8 *)(&__IPSBAR[0x10000A]))
#define MCF_GPIO_PQSPAR (*(vuint16*)(&__IPSBAR[0x10006C]))
#define MCF_GPIO_PTAPAR (*(vuint8 *)(&__IPSBAR[0x10006E]))
#define MCF_GPIO_PTCPAR (*(vuint8 *)(&__IPSBAR[0x10006F]))
#define MCF_GPIO_PUAPAR (*(vuint8 *)(&__IPSBAR[0x100071]))
#define MCF_GPIO_PUBPAR (*(vuint8 *)(&__IPSBAR[0x100072]))
#define MCF_GPIO_PUCPAR (*(vuint8 *)(&__IPSBAR[0x100073]))
#define MCF_GPIO_SETAS (*(vuint8 *)(&__IPSBAR[0x10003B]))
#define MCF_GPIO_SETNQ (*(vuint8 *)(&__IPSBAR[0x100038]))
#define MCF_GPIO_SETTC (*(vuint8 *)(&__IPSBAR[0x10003F]))
#define MCF_INTC0_ICR01 (*(vuint8 *)(&__IPSBAR[0xC41]))
#define MCF_INTC0_ICR53 (*(vuint8 *)(&__IPSBAR[0xC75]))
#define MCF_INTC0_ICR55 (*(vuint8 *)(&__IPSBAR[0xC77]))
#define MCF_INTC0_IMRH (*(vuint32*)(&__IPSBAR[0xC08]))
#define MCF_INTC0_IMRL (*(vuint32*)(&__IPSBAR[0xC0C]))
#define MCF_INTC_ICR_IL(x) (((x)&0x7)<<0x3)
#define MCF_INTC_ICR_IP(x) (((x)&0x7)<<0)
#define MCF_INTC_IMRH_INT_MASK53 (0x200000)
#define MCF_INTC_IMRH_INT_MASK55 (0x800000)
#define MCF_INTC_IMRL_INT_MASK1 (0x2)
#define MCF_INTC_IMRL_MASKALL (0x1)
#define MCF_PIT0_PCSR (*(vuint16*)(&__IPSBAR[0x150000]))
#define MCF_PIT0_PMR (*(vuint16*)(&__IPSBAR[0x150002]))
#define MCF_PIT_PCSR_EN (0x1)
#define MCF_PIT_PCSR_OVW (0x10)
#define MCF_PIT_PCSR_PIE (0x8)
#define MCF_PIT_PCSR_PIF (0x4)
#define MCF_PIT_PCSR_PRE(x) (((x)&0xF)<<0x8)
#define MCF_PIT_PCSR_RLD (0x2)
#define MCF_PMM_LPCR (*(vuint8 *)(&__IPSBAR[0x110007]))
#define MCF_PMM_LPCR_LPMD_STOP (0xC0)
#define MCF_PMM_LPICR (*(vuint8 *)(&__IPSBAR[0x12]))
#define MCF_PMM_LPICR_ENBSTOP (0x80)
#define MCF_PMM_LPICR_XLPM_IPL(x) (((x)&0x7)<<0x4)
#define MCF_QSPI_QAR (*(vuint16*)(&__IPSBAR[0x350]))
#define MCF_QSPI_QAR_CMD (0x20)
#define MCF_QSPI_QAR_RECV (0x10)
#define MCF_QSPI_QAR_TRANS (0)
#define MCF_QSPI_QDLYR (*(vuint16*)(&__IPSBAR[0x344]))
#define MCF_QSPI_QDLYR_SPE (0x8000)
#define MCF_QSPI_QDR (*(vuint16*)(&__IPSBAR[0x354]))
#define MCF_QSPI_QDR_CONT (0x8000)
#define MCF_QSPI_QIR (*(vuint16*)(&__IPSBAR[0x34C]))
#define MCF_QSPI_QIR_SPIF (0x1)
#define MCF_QSPI_QMR (*(vuint16*)(&__IPSBAR[0x340]))
#define MCF_QSPI_QMR_CPHA (0x100)
#define MCF_QSPI_QMR_CPOL (0x200)
#define MCF_QSPI_QMR_MSTR (0x8000)
#define MCF_QSPI_QWR (*(vuint16*)(&__IPSBAR[0x348]))
#define MCF_QSPI_QWR_CSIV (0x1000)
#define MCF_QSPI_QWR_ENDQP(x) (((x)&0xF)<<0x8)
#define MCF_QSPI_QWR_NEWQP(x) (((x)&0xF)<<0)
#define MCF_RCM_RCR (*(vuint8 *)(&__IPSBAR[0x110000]))
#define MCF_RCM_RCR_SOFTRST (0x80)
#define MCF_SCM_CWCR (*(vuint8 *)(&__IPSBAR[0x11]))
#define MCF_SCM_RAMBAR (*(vuint32*)(&__IPSBAR[0x8]))
#define MCF_SCM_RAMBAR_BA(x) ((x)&0xFFFF0000)
#define MCF_SCM_RAMBAR_BDE (0x200)
#define MCF_USB_OTG_ADDR (*(vuint8 *)(&__IPSBAR[0x1C0098]))
#define MCF_USB_OTG_ADDR_LS_EN (0x80)
#define MCF_USB_OTG_BDT_PAGE_01 (*(vuint8 *)(&__IPSBAR[0x1C009C]))
#define MCF_USB_OTG_BDT_PAGE_02 (*(vuint8 *)(&__IPSBAR[0x1C00B0]))
#define MCF_USB_OTG_BDT_PAGE_03 (*(vuint8 *)(&__IPSBAR[0x1C00B4]))
#define MCF_USB_OTG_CTL (*(vuint8 *)(&__IPSBAR[0x1C0094]))
#define MCF_USB_OTG_CTL_HOST_MODE_EN (0x8)
#define MCF_USB_OTG_CTL_JSTATE (0x80)
#define MCF_USB_OTG_CTL_ODD_RST (0x2)
#define MCF_USB_OTG_CTL_RESET (0x10)
#define MCF_USB_OTG_CTL_TXSUSPEND_TOKENBUSY (0x20)
#define MCF_USB_OTG_CTL_USB_EN_SOF_EN (0x1)
#define MCF_USB_OTG_ENDPT(x) (*(vuint8 *)(&__IPSBAR[0x1C00C0 + ((x)*0x4)]))
#define MCF_USB_OTG_ENDPT0 (*(vuint8 *)(&__IPSBAR[0x1C00C0]))
#define MCF_USB_OTG_ENDPT_EP_HSHK (0x1)
#define MCF_USB_OTG_ENDPT_EP_RX_EN (0x8)
#define MCF_USB_OTG_ENDPT_EP_TX_EN (0x4)
#define MCF_USB_OTG_ENDPT_HOST_WO_HUB (0x80)
#define MCF_USB_OTG_ENDPT_RETRY_DIS (0x40)
#define MCF_USB_OTG_INT_ENB (*(vuint8 *)(&__IPSBAR[0x1C0084]))
#define MCF_USB_OTG_INT_ENB_ATTACH_EN (0x40)
#define MCF_USB_OTG_INT_ENB_SLEEP_EN (0x10)
#define MCF_USB_OTG_INT_ENB_TOK_DNE_EN (0x8)
#define MCF_USB_OTG_INT_ENB_USB_RST_EN (0x1)
#define MCF_USB_OTG_INT_STAT (*(vuint8 *)(&__IPSBAR[0x1C0080]))
#define MCF_USB_OTG_INT_STAT_ATTACH (0x40)
#define MCF_USB_OTG_INT_STAT_ERROR (0x2)
#define MCF_USB_OTG_INT_STAT_RESUME (0x20)
#define MCF_USB_OTG_INT_STAT_SLEEP (0x10)
#define MCF_USB_OTG_INT_STAT_STALL (0x80)
#define MCF_USB_OTG_INT_STAT_TOK_DNE (0x8)
#define MCF_USB_OTG_INT_STAT_USB_RST (0x1)
#define MCF_USB_OTG_OTG_CTRL (*(vuint8 *)(&__IPSBAR[0x1C001C]))
#define MCF_USB_OTG_OTG_CTRL_DM_LOW (0x10)
#define MCF_USB_OTG_OTG_CTRL_DP_HIGH (0x80)
#define MCF_USB_OTG_OTG_CTRL_DP_LOW (0x20)
#define MCF_USB_OTG_OTG_CTRL_OTG_EN (0x4)
#define MCF_USB_OTG_SOF_THLD (*(vuint8 *)(&__IPSBAR[0x1C00AC]))
#define MCF_USB_OTG_STAT (*(vuint8 *)(&__IPSBAR[0x1C0090]))
#define MCF_USB_OTG_STAT_ODD (0x4)
#define MCF_USB_OTG_STAT_TX (0x8)
#define MCF_USB_OTG_TOKEN (*(vuint8 *)(&__IPSBAR[0x1C00A8]))
#define MCF_USB_OTG_TOKEN_TOKEN_ENDPT(x) (((x)&0xF)<<0)
#define MCF_USB_OTG_TOKEN_TOKEN_PID(x) (((x)&0xF)<<0x4)
#define MCF_USB_OTG_USB_CTRL (*(vuint8 *)(&__IPSBAR[0x1C0100]))
#define MCF_USB_OTG_USB_CTRL_CLK_SRC(x) (((x)&0x3)<<0)
#endif
#if MCF52233
#define MCF_ADC_ADLST1 (*(vuint16*)(&__IPSBAR[0x190006]))
#define MCF_ADC_ADLST2 (*(vuint16*)(&__IPSBAR[0x190008]))
#define MCF_ADC_ADRSLT(x) (*(vuint16*)(&__IPSBAR[0x190012 + ((x)*0x2)]))
#define MCF_ADC_ADSDIS (*(vuint16*)(&__IPSBAR[0x19000A]))
#define MCF_ADC_ADSTAT (*(vuint16*)(&__IPSBAR[0x19000C]))
#define MCF_ADC_CTRL1 (*(vuint16*)(&__IPSBAR[0x190000]))
#define MCF_ADC_CTRL1_SMODE(x) (((x)&0x7)<<0)
#define MCF_ADC_CTRL1_START0 (0x2000)
#define MCF_ADC_CTRL2 (*(vuint16*)(&__IPSBAR[0x190002]))
#define MCF_ADC_POWER (*(vuint16*)(&__IPSBAR[0x190052]))
#define MCF_ADC_POWER_PUDELAY(x) (((x)&0x3F)<<0x4)
#define MCF_CFM_CFMCLKD (*(vuint8 *)(&__IPSBAR[0x1D0002]))
#define MCF_CFM_CFMCLKD_DIV(x) (((x)&0x3F)<<0)
#define MCF_CFM_CFMCLKD_DIVLD (0x80)
#define MCF_CFM_CFMCLKD_PRDIV8 (0x40)
#define MCF_CFM_CFMCMD (*(vuint8 *)(&__IPSBAR[0x1D0024]))
#define MCF_CFM_CFMCMD_PAGE_ERASE (0x40)
#define MCF_CFM_CFMCMD_WORD_PROGRAM (0x20)
#define MCF_CFM_CFMDACC (*(vuint32*)(&__IPSBAR[0x1D0018]))
#define MCF_CFM_CFMMCR (*(vuint16*)(&__IPSBAR[0x1D0000]))
#define MCF_CFM_CFMPROT (*(vuint32*)(&__IPSBAR[0x1D0010]))
#define MCF_CFM_CFMSACC (*(vuint32*)(&__IPSBAR[0x1D0014]))
#define MCF_CFM_CFMSEC_SECSTAT (0x40000000)
#define MCF_CFM_CFMUSTAT (*(vuint8 *)(&__IPSBAR[0x1D0020]))
#define MCF_CFM_CFMUSTAT_ACCERR (0x10)
#define MCF_CFM_CFMUSTAT_CBEIF (0x80)
#define MCF_CFM_CFMUSTAT_CCIF (0x40)
#define MCF_CFM_CFMUSTAT_PVIOL (0x20)
#define MCF_CLOCK_CCHR (*(vuint8 *)(&__IPSBAR[0x120008]))
#define MCF_CLOCK_RTCDR (*(vuint32*)(&__IPSBAR[0x12000C]))
#define MCF_CLOCK_SYNCR (*(vuint16*)(&__IPSBAR[0x120000]))
#define MCF_CLOCK_SYNCR_CLKSRC (0x4)
#define MCF_CLOCK_SYNCR_DISCLK (0x40)
#define MCF_CLOCK_SYNCR_MFD(x) (((x)&0x7)<<0xC)
#define MCF_CLOCK_SYNCR_PLLEN (0x1)
#define MCF_CLOCK_SYNCR_PLLMODE (0x2)
#define MCF_CLOCK_SYNSR (*(vuint8 *)(&__IPSBAR[0x120002]))
#define MCF_CLOCK_SYNSR_LOCK (0x8)
#define MCF_EPORT0_EPFR (*(vuint8 *)(&__IPSBAR[0x130006]))
#define MCF_EPORT0_EPIER (*(vuint8 *)(&__IPSBAR[0x130003]))
#define MCF_EPORT0_EPPAR (*(vuint16*)(&__IPSBAR[0x130000]))
#define MCF_EPORT0_EPPDR (*(vuint8 *)(&__IPSBAR[0x130005]))
#define MCF_EPORT_EPFR(x) (*(vuint8 *)(&__IPSBAR[0x130006 + ((x)*0x10000)]))
#define MCF_EPORT_EPIER(x) (*(vuint8 *)(&__IPSBAR[0x130003 + ((x)*0x10000)]))
#define MCF_EPORT_EPIER_EPIE1 (0x2)
#define MCF_EPORT_EPPAR(x) (*(vuint16*)(&__IPSBAR[0x130000 + ((x)*0x10000)]))
#define MCF_EPORT_EPPAR_EPPA1_FALLING (0x8)
#define MCF_EPORT_EPPAR_EPPA1_LEVEL (0)
#define MCF_EPORT_EPPDR(x) (*(vuint8 *)(&__IPSBAR[0x130005 + ((x)*0x10000)]))
#define MCF_EPORT_EPPDR_EPPD1 (0x2)
#define MCF_GPIO_CLRAS (*(vuint8 *)(&__IPSBAR[0x100053]))
#define MCF_GPIO_CLRNQ (*(vuint8 *)(&__IPSBAR[0x100050]))
#define MCF_GPIO_CLRTC (*(vuint8 *)(&__IPSBAR[0x100057]))
#define MCF_GPIO_CLRUA (*(vuint8 *)(&__IPSBAR[0x100059]))
#define MCF_GPIO_DDRAN (*(vuint8 *)(&__IPSBAR[0x100022]))
#define MCF_GPIO_DDRAS (*(vuint8 *)(&__IPSBAR[0x100023]))
#define MCF_GPIO_DDRNQ (*(vuint8 *)(&__IPSBAR[0x100020]))
#define MCF_GPIO_DDRQS (*(vuint8 *)(&__IPSBAR[0x100024]))
#define MCF_GPIO_DDRTA (*(vuint8 *)(&__IPSBAR[0x100026]))
#define MCF_GPIO_DDRTC (*(vuint8 *)(&__IPSBAR[0x100027]))
#define MCF_GPIO_DDRUA (*(vuint8 *)(&__IPSBAR[0x100029]))
#define MCF_GPIO_DDRUB (*(vuint8 *)(&__IPSBAR[0x10002A]))
#define MCF_GPIO_DDRUC (*(vuint8 *)(&__IPSBAR[0x10002B]))
#define MCF_GPIO_PANPAR (*(vuint8 *)(&__IPSBAR[0x10006A]))
#define MCF_GPIO_PASPAR (*(vuint8 *)(&__IPSBAR[0x10006B]))
#define MCF_GPIO_PDDPAR (*(vuint8 *)(&__IPSBAR[0x100074]))
#define MCF_GPIO_PLDPAR (*(vuint8 *)(&__IPSBAR[0x100075]))
#define MCF_GPIO_PNQPAR (*(vuint16*)(&__IPSBAR[0x100068]))
#define MCF_GPIO_PORTAN (*(vuint8 *)(&__IPSBAR[0x10000A]))
#define MCF_GPIO_PORTLD_PORTLD0 (0x1)
#define MCF_GPIO_PORTLD_PORTLD1 (0x2)
#define MCF_GPIO_PORTLD_PORTLD2 (0x4)
#define MCF_GPIO_PORTLD_PORTLD3 (0x8)
#define MCF_GPIO_PORTLD_PORTLD4 (0x10)
#define MCF_GPIO_PORTLD_PORTLD5 (0x20)
#define MCF_GPIO_PORTLD_PORTLD6 (0x40)
#define MCF_GPIO_PQSPAR (*(vuint16*)(&__IPSBAR[0x10006C]))
#define MCF_GPIO_PTAPAR (*(vuint8 *)(&__IPSBAR[0x10006E]))
#define MCF_GPIO_PTCPAR (*(vuint8 *)(&__IPSBAR[0x10006F]))
#define MCF_GPIO_PUAPAR (*(vuint8 *)(&__IPSBAR[0x100071]))
#define MCF_GPIO_PUBPAR (*(vuint8 *)(&__IPSBAR[0x100072]))
#define MCF_GPIO_PUCPAR (*(vuint8 *)(&__IPSBAR[0x100073]))
#define MCF_GPIO_SETAS (*(vuint8 *)(&__IPSBAR[0x10003B]))
#define MCF_GPIO_SETNQ (*(vuint8 *)(&__IPSBAR[0x100038]))
#define MCF_GPIO_SETTC (*(vuint8 *)(&__IPSBAR[0x10003F]))
#define MCF_INTC0_ICR01 (*(vuint8 *)(&__IPSBAR[0xC41]))
#define MCF_INTC0_ICR53 (*(vuint8 *)(&__IPSBAR[0xC75]))
#define MCF_INTC0_ICR55 (*(vuint8 *)(&__IPSBAR[0xC77]))
#define MCF_INTC0_IMRH (*(vuint32*)(&__IPSBAR[0xC08]))
#define MCF_INTC0_IMRL (*(vuint32*)(&__IPSBAR[0xC0C]))
#define MCF_INTC_ICR_IL(x) (((x)&0x7)<<0x3)
#define MCF_INTC_ICR_IP(x) (((x)&0x7)<<0)
#define MCF_INTC_IMRH_INT_MASK53 (0x200000)
#define MCF_INTC_IMRH_INT_MASK55 (0x800000)
#define MCF_INTC_IMRL_INT_MASK1 (0x2)
#define MCF_INTC_IMRL_MASKALL (0x1)
#define MCF_PIT0_PCSR (*(vuint16*)(&__IPSBAR[0x150000]))
#define MCF_PIT0_PMR (*(vuint16*)(&__IPSBAR[0x150002]))
#define MCF_PIT_PCSR_EN (0x1)
#define MCF_PIT_PCSR_OVW (0x10)
#define MCF_PIT_PCSR_PIE (0x8)
#define MCF_PIT_PCSR_PIF (0x4)
#define MCF_PIT_PCSR_PRE(x) (((x)&0xF)<<0x8)
#define MCF_PIT_PCSR_RLD (0x2)
#define MCF_PMM_LPCR (*(vuint8 *)(&__IPSBAR[0x110007]))
#define MCF_PMM_LPCR_LPMD_STOP (0xC0)
#define MCF_PMM_LPICR (*(vuint8 *)(&__IPSBAR[0x12]))
#define MCF_PMM_LPICR_ENBSTOP (0x80)
#define MCF_PMM_LPICR_XLPM_IPL(x) (((x)&0x7)<<0x4)
#define MCF_QSPI_QAR (*(vuint16*)(&__IPSBAR[0x350]))
#define MCF_QSPI_QAR_CMD (0x20)
#define MCF_QSPI_QAR_RECV (0x10)
#define MCF_QSPI_QAR_TRANS (0)
#define MCF_QSPI_QDLYR (*(vuint16*)(&__IPSBAR[0x344]))
#define MCF_QSPI_QDLYR_SPE (0x8000)
#define MCF_QSPI_QDR (*(vuint16*)(&__IPSBAR[0x354]))
#define MCF_QSPI_QDR_CONT (0x8000)
#define MCF_QSPI_QIR (*(vuint16*)(&__IPSBAR[0x34C]))
#define MCF_QSPI_QIR_SPIF (0x1)
#define MCF_QSPI_QMR (*(vuint16*)(&__IPSBAR[0x340]))
#define MCF_QSPI_QMR_CPHA (0x100)
#define MCF_QSPI_QMR_CPOL (0x200)
#define MCF_QSPI_QMR_MSTR (0x8000)
#define MCF_QSPI_QWR (*(vuint16*)(&__IPSBAR[0x348]))
#define MCF_QSPI_QWR_CSIV (0x1000)
#define MCF_QSPI_QWR_ENDQP(x) (((x)&0xF)<<0x8)
#define MCF_QSPI_QWR_NEWQP(x) (((x)&0xF)<<0)
#define MCF_RCM_RCR (*(vuint8 *)(&__IPSBAR[0x110000]))
#define MCF_RCM_RCR_SOFTRST (0x80)
#define MCF_SCM_CWCR (*(vuint8 *)(&__IPSBAR[0x11]))
#define MCF_SCM_RAMBAR (*(vuint32*)(&__IPSBAR[0x8]))
#define MCF_SCM_RAMBAR_BA(x) ((x)&0xFFFF0000)
#define MCF_SCM_RAMBAR_BDE (0x200)
#endif
